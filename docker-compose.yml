version: '2'

services:
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass hF1mocODmW2i5cEydTJmr8NZQJRDub0I
    volumes:
      - cache:/data
    networks:
      - traefik-net


  traefik:
    image: 'traefik:v2.9'
    container_name: 'traefik'
    command:
      - '--log.level=DEBUG'
      - '--api=true'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.websecure.address=:443'
      - '--providers.docker.exposedbydefault=true'
      - '--certificatesresolvers.le.acme.tlschallenge=true'
      - '--certificatesresolvers.le.acme.email=devops@avilatek.com'
      - '--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - './letsencrypt:/letsencrypt'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - traefik-net

  api:
    build:
      context: .
      dockerfile: api.Dockerfile
      args:
        SENTRY_URL: $SENTRY_URL
        SENTRY_ORG: $SENTRY_ORG
        SENTRY_PROJECT: $SENTRY_PROJECT_API
        SENTRY_TOKEN: $SENTRY_TOKEN
        RELEASE: $RELEASE
        TURBO_TEAM: $TURBO_TEAM
        TURBO_TOKEN: $TURBO_TOKEN
    image: api
    env_file: ./apps/api/src/variables.env
    restart: unless-stopped
    ports:
      - '3000'
    mem_limit: 2g
    memswap_limit: -1
    mem_swappiness: 20
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`api.example.com`)'
      - 'traefik.http.routers.api.entrypoints=websecure'
      - 'traefik.http.routers.api.tls.certresolver=le'
      - 'traefik.http.middlewares.admin-compress.compress=true'
    networks:
      - traefik-net

  client:
    build:
      context: .
      dockerfile: client.Dockerfile
      args:
        NEXT_PUBLIC_SENTRY_DSN: $NEXT_PUBLIC_SENTRY_DSN_CLIENT
        SENTRY_URL: $SENTRY_URL
        SENTRY_ORG: $SENTRY_ORG
        SENTRY_PROJECT: $SENTRY_PROJECT_CLIENT
        SENTRY_TOKEN: $SENTRY_TOKEN
        RELEASE: $RELEASE
        TURBO_TEAM: $TURBO_TEAM
        TURBO_TOKEN: $TURBO_TOKEN
    image: client
    env_file: ./apps/client/.env.local
    depends_on:
      - 'api'
    restart: unless-stopped
    ports:
      - '3001'
    mem_limit: 2g
    memswap_limit: -1
    mem_swappiness: 20
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client.rule=Host(`example.com`)'
      - 'traefik.http.routers.client.entrypoints=websecure'
      - 'traefik.http.routers.client.tls.certresolver=le'
      - 'traefik.http.middlewares.admin-compress.compress=true'
    networks:
      - traefik-net

  admin:
    build:
      context: .
      dockerfile: admin.Dockerfile
      args:
        NEXT_PUBLIC_SENTRY_DSN: $NEXT_PUBLIC_SENTRY_DSN_ADMIN
        SENTRY_URL: $SENTRY_URL
        SENTRY_ORG: $SENTRY_ORG
        SENTRY_PROJECT: $SENTRY_PROJECT_ADMIN
        SENTRY_TOKEN: $SENTRY_TOKEN
        RELEASE: $RELEASE
        TURBO_TEAM: $TURBO_TEAM
        TURBO_TOKEN: $TURBO_TOKEN
    image: admin
    env_file: ./apps/admin/.env.local
    depends_on:
      - 'api'
    restart: unless-stopped
    ports:
      - '3002'
    mem_limit: 2g
    memswap_limit: -1
    mem_swappiness: 20
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.admin.rule=Host(`admin.example.com`)'
      - 'traefik.http.routers.admin.entrypoints=websecure'
      - 'traefik.http.routers.admin.tls.certresolver=le'
      - 'traefik.http.middlewares.admin-compress.compress=true'
    networks:
      - traefik-net

networks:
  traefik-net:
    driver: bridge

volumes:
  cache:
    driver: local
