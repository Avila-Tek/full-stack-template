name: Deploy to Digital Ocean Droplet [dev]

on:
  push:
    branches:
      - development

jobs:
  build-containers:
    name: 'Build Containers'
    environment: development
    runs-on: self-hosted

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build images
        working-directory: ./
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          SECRET: ${{ secrets.SECRET }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          DASHBOARD_URL: ${{ secrets.DASHBOARD_URL }}
          CLIENT_URL_WWW: ${{ secrets.CLIENT_URL_WWW }}
          DASHBOARD_URL_WWW: ${{ secrets.DASHBOARD_URL_WWW }}
          DATABASE: ${{ secrets.DATABASE }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_DSN_ADMIN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN_ADMIN }}
          SENTRY_URL_ADMIN: ${{ secrets.SENTRY_URL_ADMIN }}
          SENTRY_ORG_ADMIN: ${{ secrets.SENTRY_ORG_ADMIN }}
          SENTRY_PROJECT_ADMIN: ${{ secrets.SENTRY_PROJECT_ADMIN }}
          SENTRY_TOKEN_ADMIN: ${{ secrets.SENTRY_TOKEN_ADMIN }}
          SENTRY_CLI_ADMIN: ${{ secrets.SENTRY_CLI_ADMIN }}
          NEXT_PUBLIC_SENTRY_DSN_CLIENT: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN_CLIENT }}
          SENTRY_URL_CLIENT: ${{ secrets.SENTRY_URL_CLIENT }}
          SENTRY_ORG_CLIENT: ${{ secrets.SENTRY_ORG_CLIENT }}
          SENTRY_PROJECT_CLIENT: ${{ secrets.SENTRY_PROJECT_CLIENT }}
          SENTRY_TOKEN_CLIENT: ${{ secrets.SENTRY_TOKEN_CLIENT }}
          SENTRY_CLI_CLIENT: ${{ secrets.SENTRY_CLI_CLIENT }}
        run: |
          touch ./backend/src/variables.env
          touch ./dashboard/.env.local ./dashboard/sentry.properties
          touch ./client/.env.local ./client/sentry.properties
          echo "NODE_ENV=$NODE_ENV" >> ./backend/src/variables.env
          echo "PORT=$PORT" >> ./backend/src/variables.env
          echo "SECRET=$SECRET" >> ./backend/src/variables.env
          echo "CLIENT_URL=$CLIENT_URL" >> ./backend/src/variables.env
          echo "DASHBOARD_URL=$DASHBOARD_URL" >> ./backend/src/variables.env
          echo "CLIENT_URL_WWW=$CLIENT_URL_WWW" >> ./backend/src/variables.env
          echo "DASHBOARD_URL_WWW=$DASHBOARD_URL_WWW" >> ./backend/src/variables.env
          echo "DATABASE=$DATABASE" >> ./backend/src/variables.env
          echo "SENTRY_DSN=$SENTRY_DSN" >> ./backend/src/variables.env
          echo "NEXT_PUBLIC_SENTRY_DSN=$NEXT_PUBLIC_SENTRY_DSN_ADMIN" >> ./dashboard/.env.local
          echo "SENTRY_SERVER_INIT_PATH=.next/server/sentry/initServerSDK.js" >> ./dashboard/.env.local
          echo "defaults.url=$SENTRY_URL_ADMIN" >> ./dashboard/sentry.properties
          echo "defaults.org=$SENTRY_ORG_ADMIN" >> ./dashboard/sentry.properties
          echo "defaults.project=$SENTRY_PROJECT_ADMIN" >> ./dashboard/sentry.properties
          echo "auth.token=$SENTRY_TOKEN_ADMIN" >> ./dashboard/sentry.properties
          echo "cli.executable=$SENTRY_CLI_ADMIN" >> ./dashboard/sentry.properties
          echo "NEXT_PUBLIC_SENTRY_DSN=$NEXT_PUBLIC_SENTRY_DSN_CLIENT" >> ./client/.env.local
          echo "SENTRY_SERVER_INIT_PATH=.next/server/sentry/initServerSDK.js" >> ./client/.env.local
          echo "defaults.url=$SENTRY_URL_CLIENT" >> ./client/sentry.properties
          echo "defaults.org=$SENTRY_ORG_CLIENT" >> ./client/sentry.properties
          echo "defaults.project=$SENTRY_PROJECT_CLIENT" >> ./client/sentry.properties
          echo "auth.token=$SENTRY_TOKEN_CLIENT" >> ./client/sentry.properties
          echo "cli.executable=$SENTRY_CLI_CLIENT" >> ./client/sentry.properties
          docker-compose build --no-cache

  start-containers:
    name: 'Start Containers'
    environment: development
    runs-on: self-hosted

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Start images
        working-directory: ./
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          SECRET: ${{ secrets.SECRET }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          DASHBOARD_URL: ${{ secrets.DASHBOARD_URL }}
          CLIENT_URL_WWW: ${{ secrets.CLIENT_URL_WWW }}
          DASHBOARD_URL_WWW: ${{ secrets.DASHBOARD_URL_WWW }}
          DATABASE: ${{ secrets.DATABASE }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_DSN_ADMIN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN_ADMIN }}
          SENTRY_URL_ADMIN: ${{ secrets.SENTRY_URL_ADMIN }}
          SENTRY_ORG_ADMIN: ${{ secrets.SENTRY_ORG_ADMIN }}
          SENTRY_PROJECT_ADMIN: ${{ secrets.SENTRY_PROJECT_ADMIN }}
          SENTRY_TOKEN_ADMIN: ${{ secrets.SENTRY_TOKEN_ADMIN }}
          SENTRY_CLI_ADMIN: ${{ secrets.SENTRY_CLI_ADMIN }}
          NEXT_PUBLIC_SENTRY_DSN_CLIENT: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN_CLIENT }}
          SENTRY_URL_CLIENT: ${{ secrets.SENTRY_URL_CLIENT }}
          SENTRY_ORG_CLIENT: ${{ secrets.SENTRY_ORG_CLIENT }}
          SENTRY_PROJECT_CLIENT: ${{ secrets.SENTRY_PROJECT_CLIENT }}
          SENTRY_TOKEN_CLIENT: ${{ secrets.SENTRY_TOKEN_CLIENT }}
          SENTRY_CLI_CLIENT: ${{ secrets.SENTRY_CLI_CLIENT }}
        run: |
          touch ./backend/src/variables.env
          touch ./dashboard/.env.local ./dashboard/sentry.properties
          touch ./client/.env.local ./client/sentry.properties
          echo "NODE_ENV=$NODE_ENV" >> ./backend/src/variables.env
          echo "PORT=$PORT" >> ./backend/src/variables.env
          echo "SECRET=$SECRET" >> ./backend/src/variables.env
          echo "CLIENT_URL=$CLIENT_URL" >> ./backend/src/variables.env
          echo "DASHBOARD_URL=$DASHBOARD_URL" >> ./backend/src/variables.env
          echo "CLIENT_URL_WWW=$CLIENT_URL_WWW" >> ./backend/src/variables.env
          echo "DASHBOARD_URL_WWW=$DASHBOARD_URL_WWW" >> ./backend/src/variables.env
          echo "DATABASE=$DATABASE" >> ./backend/src/variables.env
          echo "SENTRY_DSN=$SENTRY_DSN" >> ./backend/src/variables.env
          echo "NEXT_PUBLIC_SENTRY_DSN=$NEXT_PUBLIC_SENTRY_DSN_ADMIN" >> ./dashboard/.env.local
          echo "SENTRY_SERVER_INIT_PATH=.next/server/sentry/initServerSDK.js" >> ./dashboard/.env.local
          echo "defaults.url=$SENTRY_URL_ADMIN" >> ./dashboard/sentry.properties
          echo "defaults.org=$SENTRY_ORG_ADMIN" >> ./dashboard/sentry.properties
          echo "defaults.project=$SENTRY_PROJECT_ADMIN" >> ./dashboard/sentry.properties
          echo "auth.token=$SENTRY_TOKEN_ADMIN" >> ./dashboard/sentry.properties
          echo "cli.executable=$SENTRY_CLI_ADMIN" >> ./dashboard/sentry.properties
          echo "NEXT_PUBLIC_SENTRY_DSN=$NEXT_PUBLIC_SENTRY_DSN_CLIENT" >> ./client/.env.local
          echo "SENTRY_SERVER_INIT_PATH=.next/server/sentry/initServerSDK.js" >> ./client/.env.local
          echo "defaults.url=$SENTRY_URL_CLIENT" >> ./client/sentry.properties
          echo "defaults.org=$SENTRY_ORG_CLIENT" >> ./client/sentry.properties
          echo "defaults.project=$SENTRY_PROJECT_CLIENT" >> ./client/sentry.properties
          echo "auth.token=$SENTRY_TOKEN_CLIENT" >> ./client/sentry.properties
          echo "cli.executable=$SENTRY_CLI_CLIENT" >> ./client/sentry.properties
          docker kill $(docker ps -q)
          docker-compose up -d
          docker system prune -f
